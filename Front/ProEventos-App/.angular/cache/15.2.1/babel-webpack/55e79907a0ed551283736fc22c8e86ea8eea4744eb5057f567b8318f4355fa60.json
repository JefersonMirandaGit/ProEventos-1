{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventoService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'https://localhost:7245/api/eventos';\n  }\n  getEventos() {\n    return this.http.get(this.baseURL);\n  }\n  getEventosByTema(tema) {\n    return this.http.get(`${this.baseURL}/${tema}/tema`);\n  }\n  getEventosById() {\n    return this.http.get(`${this.baseURL}/${id}`);\n  }\n}\nEventoService.ɵfac = function EventoService_Factory(t) {\n  return new (t || EventoService)(i0.ɵɵinject(i1.HttpClient));\n};\nEventoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventoService,\n  factory: EventoService.ɵfac\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAG1BC,YAAqBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFvB,YAAO,GAAE,oCAAoC;EAEN;EAEzCC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,OAAO,CAAC;EAC9C;EAEAC,gBAAgB,CAACC,IAAY;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIE,IAAI,OAAO,CAAC;EAChE;EAEAC,cAAc;IACZ,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,IAAII,EAAE,EAAE,CAAC;EACvD;;AAfaT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAU,SAAbV,aAAa;AAAA","names":["EventoService","constructor","http","getEventos","get","baseURL","getEventosByTema","tema","getEventosById","id","factory"],"sourceRoot":"","sources":["C:\\Users\\Estudos\\Desktop\\Full Stack Angula com ASP NET\\ProEventos\\Front\\ProEventos-App\\src\\app\\services\\evento.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Evento } from '../models/Evento';\n\n@Injectable(\n  //{ providedIn: 'root'}\n  )\nexport class EventoService {\n  baseURL ='https://localhost:7245/api/eventos'\n\nconstructor(private  http: HttpClient) { }\n\ngetEventos(): Observable<Evento[]>{\n  return this.http.get<Evento[]>(this.baseURL);\n}\n\ngetEventosByTema(tema: string): Observable<Evento[]>{\n  return this.http.get<Evento[]>(`${this.baseURL}/${tema}/tema`);\n}\n\ngetEventosById(): Observable<Evento>{\n  return this.http.get<Evento>(`${this.baseURL}/${id}`);\n}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}